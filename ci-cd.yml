name: CI/CD Pipeline for Smart Feedback App

on:
  push:
    branches:
      - main  # This will trigger the workflow on every push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from GitHub
    - name: Checkout code
      uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx for multi-platform builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

      # Step 3: Cache Docker layers for faster builds
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

      # Step 4: Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t smart-feedback-app .

      # Step 5: Log in to DockerHub using the secrets stored in GitHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Tag and push the Docker image to DockerHub
    - name: Push Docker image to DockerHub
      run: |
        docker tag smart-feedback-app ${{ secrets.DOCKER_USERNAME }}/smart-feedback-app:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/smart-feedback-app:latest

      # Optional Step 7: Deploy the Docker image to a remote server (via SSH)
    - name: Deploy Docker image (Optional)
      run: |
        ssh username@server_address 'docker pull ${{ secrets.DOCKER_USERNAME }}/smart-feedback-app:latest && docker run -d -p 8080:80 ${{ secrets.DOCKER_USERNAME }}/smart-feedback-app:latest'
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
